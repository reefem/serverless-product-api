# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: productsapi
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3.10.2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
# stage: dev
#region: eu-west-1

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["ProductsTable", "Arn"] }

functions:
  createProduct:
    handler: src/handler.createProduct
    events:
      - httpApi:
          path: /product
          method: post
  getProduct:
    handler: src/handler.getProduct
    events:
      - httpApi:
          path: /product/{id}
          method: get
  updateProduct:
    handler: src/handler.updateProduct
    events:
      - httpApi:
          path: /product/{id}
          method: put
  deleteProduct:
    handler: src/handler.deleteProduct
    events:
      - httpApi:
          path: /product/{id}
          method: delete
  listProduct:
    handler: src/handler.listProduct
    events:
      - httpApi:
          path: /products
          method: get
plugins:
  - serverless-plugin-typescript
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ProductsTable
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: productID
            AttributeType: S
        KeySchema:
          - AttributeName: productID
            KeyType: HASH